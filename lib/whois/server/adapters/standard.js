// Generated by CoffeeScript 1.10.0
var Base, Standard,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

Base = require("./base").base;

Standard = (function(superClass) {
  extend(Standard, superClass);

  function Standard() {
    return Standard.__super__.constructor.apply(this, arguments);
  }

  return Standard;

})(Base);

exports.standard = Standard;
