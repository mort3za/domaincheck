// Generated by CoffeeScript 1.10.0
var Base, Ly,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

Base = require("./base").base;

Ly = (function(superClass) {
  extend(Ly, superClass);

  function Ly() {
    return Ly.__super__.constructor.apply(this, arguments);
  }

  Ly.prototype.negative = function() {
    var domain;
    domain = this.domain.toUpperCase();
    return "Not found|NOT FOUND|No match for \"" + domain + "\"";
  };

  Ly.prototype.positive = function() {
    var domain;
    domain = this.domain.toLowerCase();
    return "Domain Name:\\s+" + domain;
  };

  Ly.prototype.request = function() {
    var domain;
    domain = this.domain.toLowerCase();
    return domain + '\r\n';
  };

  Ly.prototype.failure = function() {
    return "WHOIS LIMIT EXCEEDED|Domain wrong format";
  };

  return Ly;

})(Base);

exports.ly = Ly;
