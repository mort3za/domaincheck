// Generated by CoffeeScript 1.10.0
var Base, Io,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

Base = require("./base").base;

Io = (function(superClass) {
  extend(Io, superClass);

  function Io() {
    return Io.__super__.constructor.apply(this, arguments);
  }

  Io.prototype.request = function() {
    return this.domain + '\r\n';
  };

  Io.prototype.negative = function() {
    var domain;
    domain = this.domain.toUpperCase();
    return "is available for purchase";
  };

  Io.prototype.positive = function() {
    var domain;
    domain = this.domain.toUpperCase();
    return "Status : Live";
  };

  Io.prototype.failure = function() {
    return "ERROR|WHOIS LIMIT EXCEEDED|DOMAIN RESERVED";
  };

  return Io;

})(Base);

exports.io = Io;
