// Generated by CoffeeScript 1.10.0
var Base, Irnic,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

Base = require("./base").base;

Irnic = (function(superClass) {
  extend(Irnic, superClass);

  function Irnic() {
    return Irnic.__super__.constructor.apply(this, arguments);
  }

  Irnic.prototype.negative = function() {
    var domain;
    domain = this.domain;
    return "ERROR:101: no entries found";
  };

  Irnic.prototype.positive = function() {
    var domain;
    domain = this.domain;
    return "domain:\\s*" + domain;
  };

  Irnic.prototype.failure = function() {
    return "------------TODO--------------";
  };

  return Irnic;

})(Base);

exports.irnic = Irnic;
