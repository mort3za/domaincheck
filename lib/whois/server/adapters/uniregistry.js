// Generated by CoffeeScript 1.10.0
var Base, Uniregistry,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

Base = require("./base").base;

Uniregistry = (function(superClass) {
  extend(Uniregistry, superClass);

  function Uniregistry() {
    return Uniregistry.__super__.constructor.apply(this, arguments);
  }

  Uniregistry.prototype.request = function() {
    var domain;
    domain = this.domain.toLowerCase();
    return domain + '\r\n';
  };

  Uniregistry.prototype.negative = function() {
    return "is available for registration";
  };

  Uniregistry.prototype.positive = function() {
    var domain;
    domain = this.domain.toLowerCase();
    return "Domain Name: " + domain;
  };

  return Uniregistry;

})(Base);

exports.uniregistry = Uniregistry;
